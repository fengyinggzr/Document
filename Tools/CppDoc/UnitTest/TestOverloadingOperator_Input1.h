namespace test_overloading
{
	struct X
	{
		void* operator++	(int);
		void* operator--	(int);
		void* operator++	();
		void* operator--	();
		void* operator~		();
		void* operator!		();
		void* operator-		();
		void* operator+		();
		void* operator&		();
		void* operator*		();
		void* operator*		(int);
		void* operator/		(int);
		void* operator%		(int);
		void* operator+		(int);
		void* operator-		(int);
		void* operator<<	(int);
		void* operator>>	(int);
		void* operator==	(int);
		void* operator!=	(int);
		void* operator<		(int);
		void* operator<=	(int);
		void* operator>		(int);
		void* operator>=	(int);
		void* operator&		(int);
		void* operator|		(int);
		void* operator^		(int);
		void* operator&&	(int);
		void* operator||	(int);
		void* operator=		(int);
		void* operator*=	(int);
		void* operator/=	(int);
		void* operator%=	(int);
		void* operator+=	(int);
		void* operator-=	(int);
		void* operator<<=	(int);
		void* operator>>=	(int);
		void* operator&=	(int);
		void* operator|=	(int);
		void* operator^=	(int);
		void* operator,		(int);

		bool* operator++	(int)const;
		bool* operator--	(int)const;
		bool* operator++	()const;
		bool* operator--	()const;
		bool* operator~		()const;
		bool* operator!		()const;
		bool* operator-		()const;
		bool* operator+		()const;
		bool* operator&		()const;
		bool* operator*		()const;
		bool* operator*		(int)const;
		bool* operator/		(int)const;
		bool* operator%		(int)const;
		bool* operator+		(int)const;
		bool* operator-		(int)const;
		bool* operator<<	(int)const;
		bool* operator>>	(int)const;
		bool* operator==	(int)const;
		bool* operator!=	(int)const;
		bool* operator<		(int)const;
		bool* operator<=	(int)const;
		bool* operator>		(int)const;
		bool* operator>=	(int)const;
		bool* operator&		(int)const;
		bool* operator|		(int)const;
		bool* operator^		(int)const;
		bool* operator&&	(int)const;
		bool* operator||	(int)const;
		bool* operator=		(int)const;
		bool* operator*=	(int)const;
		bool* operator/=	(int)const;
		bool* operator%=	(int)const;
		bool* operator+=	(int)const;
		bool* operator-=	(int)const;
		bool* operator<<=	(int)const;
		bool* operator>>=	(int)const;
		bool* operator&=	(int)const;
		bool* operator|=	(int)const;
		bool* operator^=	(int)const;
		bool* operator,		(int)const;
	};
}