namespace test_overloading
{
	struct Y
	{
	};
	void* operator++		(Y&, int);
	void* operator--		(Y&, int);
	void* operator++		(Y&);
	void* operator--		(Y&);
	void* operator~			(Y&);
	void* operator!			(Y&);
	void* operator-			(Y&);
	void* operator+			(Y&);
	void* operator&			(Y&);
	void* operator*			(Y&);
	void* operator*			(Y&, int);
	void* operator/			(Y&, int);
	void* operator%			(Y&, int);
	void* operator+			(Y&, int);
	void* operator-			(Y&, int);
	void* operator<<		(Y&, int);
	void* operator>>		(Y&, int);
	void* operator==		(Y&, int);
	void* operator!=		(Y&, int);
	void* operator<			(Y&, int);
	void* operator<=		(Y&, int);
	void* operator>			(Y&, int);
	void* operator>=		(Y&, int);
	void* operator&			(Y&, int);
	void* operator|			(Y&, int);
	void* operator^			(Y&, int);
	void* operator&&		(Y&, int);
	void* operator||		(Y&, int);
	void* operator*=		(Y&, int);
	void* operator/=		(Y&, int);
	void* operator%=		(Y&, int);
	void* operator+=		(Y&, int);
	void* operator-=		(Y&, int);
	void* operator<<=		(Y&, int);
	void* operator>>=		(Y&, int);
	void* operator&=		(Y&, int);
	void* operator|=		(Y&, int);
	void* operator^=		(Y&, int);
	void* operator,			(Y&, int);
	void* operator*			(int, Y&);
	void* operator/			(int, Y&);
	void* operator%			(int, Y&);
	void* operator+			(int, Y&);
	void* operator-			(int, Y&);
	void* operator<<		(int, Y&);
	void* operator>>		(int, Y&);
	void* operator==		(int, Y&);
	void* operator!=		(int, Y&);
	void* operator<			(int, Y&);
	void* operator<=		(int, Y&);
	void* operator>			(int, Y&);
	void* operator>=		(int, Y&);
	void* operator&			(int, Y&);
	void* operator|			(int, Y&);
	void* operator^			(int, Y&);
	void* operator&&		(int, Y&);
	void* operator||		(int, Y&);
	void* operator*=		(int, Y&);
	void* operator/=		(int, Y&);
	void* operator%=		(int, Y&);
	void* operator+=		(int, Y&);
	void* operator-=		(int, Y&);
	void* operator<<=		(int, Y&);
	void* operator>>=		(int, Y&);
	void* operator&=		(int, Y&);
	void* operator|=		(int, Y&);
	void* operator^=		(int, Y&);
	void* operator,			(int, Y&);

	bool* operator++		(const Y&, int);
	bool* operator--		(const Y&, int);
	bool* operator++		(const Y&);
	bool* operator--		(const Y&);
	bool* operator~			(const Y&);
	bool* operator!			(const Y&);
	bool* operator-			(const Y&);
	bool* operator+			(const Y&);
	bool* operator&			(const Y&);
	bool* operator*			(const Y&);
	bool* operator*			(const Y&, int);
	bool* operator/			(const Y&, int);
	bool* operator%			(const Y&, int);
	bool* operator+			(const Y&, int);
	bool* operator-			(const Y&, int);
	bool* operator<<		(const Y&, int);
	bool* operator>>		(const Y&, int);
	bool* operator==		(const Y&, int);
	bool* operator!=		(const Y&, int);
	bool* operator<			(const Y&, int);
	bool* operator<=		(const Y&, int);
	bool* operator>			(const Y&, int);
	bool* operator>=		(const Y&, int);
	bool* operator&			(const Y&, int);
	bool* operator|			(const Y&, int);
	bool* operator^			(const Y&, int);
	bool* operator&&		(const Y&, int);
	bool* operator||		(const Y&, int);
	bool* operator*=		(const Y&, int);
	bool* operator/=		(const Y&, int);
	bool* operator%=		(const Y&, int);
	bool* operator+=		(const Y&, int);
	bool* operator-=		(const Y&, int);
	bool* operator<<=		(const Y&, int);
	bool* operator>>=		(const Y&, int);
	bool* operator&=		(const Y&, int);
	bool* operator|=		(const Y&, int);
	bool* operator^=		(const Y&, int);
	bool* operator,			(const Y&, int);
	bool* operator*			(int, const Y&);
	bool* operator/			(int, const Y&);
	bool* operator%			(int, const Y&);
	bool* operator+			(int, const Y&);
	bool* operator-			(int, const Y&);
	bool* operator<<		(int, const Y&);
	bool* operator>>		(int, const Y&);
	bool* operator==		(int, const Y&);
	bool* operator!=		(int, const Y&);
	bool* operator<			(int, const Y&);
	bool* operator<=		(int, const Y&);
	bool* operator>			(int, const Y&);
	bool* operator>=		(int, const Y&);
	bool* operator&			(int, const Y&);
	bool* operator|			(int, const Y&);
	bool* operator^			(int, const Y&);
	bool* operator&&		(int, const Y&);
	bool* operator||		(int, const Y&);
	bool* operator*=		(int, const Y&);
	bool* operator/=		(int, const Y&);
	bool* operator%=		(int, const Y&);
	bool* operator+=		(int, const Y&);
	bool* operator-=		(int, const Y&);
	bool* operator<<=		(int, const Y&);
	bool* operator>>=		(int, const Y&);
	bool* operator&=		(int, const Y&);
	bool* operator|=		(int, const Y&);
	bool* operator^=		(int, const Y&);
	bool* operator,			(int, const Y&);
}
